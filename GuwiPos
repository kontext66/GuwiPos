import java.awt.BorderLayout;
import javax.swing.*;
import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Iterator;
import java.awt.event.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Hashtable;

public class GuwiPos extends JFrame implements ActionListener{
        private JComboBox<String> comboGroup;
        private JComboBox<String> comboItem;
        private Hashtable subItems = new Hashtable();
    
        JButton buttonBasket;
        JButton buttonHelp;
        JTextField txtGroup;
        JTextField txtItem;
        JTextField txtQty;
        JTextField txtTotal;
        JTextField txtPrice;
                  
    GuwiPos(){
        
        JPanel panel = new JPanel(null); // Sets layout manager to null which is a bad idea!
        String[] items = {"Select Item","Betta Fish","Snail","Supplies","Food"};
        comboGroup = new JComboBox<String>(items);
        comboGroup.addActionListener(this);
        comboGroup.setBounds(130,35,150,40);

        comboItem = new JComboBox<>();
        comboItem.setPrototypeDisplayValue("XXXXXXXXXXX");
        comboItem.setBounds(130,85,150,40);
        
        String[] subItems1 = {"Select Betta","Plakat","Halfmoon","Double Tail","Crown Tail"};
        subItems.put(items[1], subItems1);
        
        String[] subItems2 = {"Select Snail","Pond Snail","Ramshorn","Apple Snail","Assassin Snail"};
        subItems.put(items[2], subItems2);
                
        String[] subItems3 = {"Select Supply","Small Fine Net","Large Fine Net","Flaring Mirror","Aquarium Hose (1meter)"};
        subItems.put(items[3], subItems3);
        
        String[] subItems4 = {"Select Food","Daphnia","Tubifex","Mosquito Larvae","Optimum Pellets"};
        subItems.put(items[4], subItems4);
        comboGroup.setSelectedIndex(1);      
        
        //TextFields - attempt to add price to current subItems String. Still figuring it out to work.
        /*int[] items1price = {0,150,350,200,200};
        subItems.put(items[1], items1price);
        int[] items2price = {0,15,25,80,120};
        subItems.put(items[2], items2price);
        int[] items3price = {0,50,80,25,15};
        subItems.put(items[3], items3price);
        int[] items4price = {0,50,100,50,50};
        subItems.put(items[4], items4price);
        comboGroup.setSelectedIndex(1);
        */
        txtPrice = new JTextField();
        txtPrice.setBounds(130,135,150,40);
        
        
        
        
        txtQty = new JTextField();
        txtQty.setBounds(130,185,150,40);
        
        txtTotal = new JTextField();
        txtTotal.setBounds(130,235,150,40);
                
        //txtTotalAmt = new JTextField(); to code later on 
        
        //txtPaid = new JTextField(); to code later on
        
        //txtChange = new JTextField(); to code later on
                
        
        //Labels
        //Product
        JLabel labelProduct = new JLabel();
        labelProduct.setText("Item Group");
        labelProduct.setBounds(10,5,100,100);
        //Item
        JLabel labelItem = new JLabel();
        labelItem.setText("Item");
        labelItem.setBounds(10,55,100,100);
        //Price
        JLabel labelPrice = new JLabel();
        labelPrice.setText("Price");
        labelPrice.setBounds(10,105,100,100);
        //Qty
        JLabel labelQty = new JLabel();
        labelQty.setText("Quantity");
        labelQty.setBounds(10,155,100,100);
        //Total
        JLabel labelTotal = new JLabel();
        labelTotal.setText("Total");
        labelTotal.setBounds(10,205,100,100);
        
        //Buttons        
        buttonBasket = new JButton();
        buttonBasket.setBounds(0,0,300,50);
        buttonBasket.setText("Add to Basket");
        buttonBasket.setFocusable(false);
        buttonBasket.setBorder(BorderFactory.createEtchedBorder());   
        buttonBasket.addActionListener(this);
        buttonBasket
            .addActionListener(e -> System.out.println("Added Item to Basket: "
                + comboGroup.getSelectedItem() + "\n" + comboItem.getSelectedItem() + "\n" + txtPrice.getText()));
                
        JButton buttonPay = new JButton();
        buttonPay.setText("PAY");
        buttonPay.setBounds(0,50,150,100);
        buttonPay.setFocusable(false);
        buttonPay.setBorder(BorderFactory.createEtchedBorder()); 
        buttonPay.addActionListener(e -> System.out.println("Payment Success"));
        
        JButton buttonCancel = new JButton();
        buttonCancel.setText("CANCEL");
        buttonCancel.setBounds(0,150,150,100);
        buttonCancel.setFocusable(false);
        buttonCancel.setBorder(BorderFactory.createEtchedBorder());
        buttonCancel.addActionListener(e -> System.out.println("Transaction Cancelled"));
        
        JButton buttonDiscount = new JButton();
        buttonDiscount.setText("Apply Discount?");   
        buttonDiscount.setBounds(150,50,150,50);
        buttonDiscount.setFocusable(false);
        buttonDiscount.setBorder(BorderFactory.createEtchedBorder());
        buttonDiscount.addActionListener(e -> System.out.println("20% Discount Applied"));
        
        JButton buttonHelp = new JButton();
        buttonHelp.setText("HELP");
        buttonHelp.setBounds(150,100,150,100);
        buttonHelp.setFocusable(false);
        buttonHelp.setBorder(BorderFactory.createEtchedBorder());        
        
        JButton buttonDelete = new JButton();
        buttonDelete.setText("DELETE");
        buttonDelete.setBounds(150,200,150,50);
        buttonDelete.setFocusable(false);
        buttonDelete.setBorder(BorderFactory.createEtchedBorder());
        buttonDelete.addActionListener(e -> System.out.println("Item Deleted"));        
        
        //Panels
        //Left contains item and price
        JPanel bluePanel = new JPanel();
	bluePanel.setBackground(Color.blue);
	bluePanel.setBounds(0, 0, 300, 300); //x,y,width,height
	bluePanel.setLayout(null);
        //Right contains product basket
        JPanel redPanel = new JPanel();
	redPanel.setBackground(Color.red);
	redPanel.setBounds(300, 0, 600, 300); // x,y,width,length
	redPanel.setLayout(null);
        //Bottom Left contains buttons pay,change,discount
        JPanel greenPanel = new JPanel();
	greenPanel.setBackground(Color.green);
	greenPanel.setBounds(0, 300, 300, 450);// x,y,width,length
	greenPanel.setLayout(null);
        //Bottom Right contains total amount 
        JPanel yellowPanel = new JPanel();
	yellowPanel.setBackground(Color.yellow);
	yellowPanel.setBounds(0, 300, 900, 450);// x,y,width,length
	yellowPanel.setLayout(null);        
                
        this.setTitle("Open Betta POS");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setLayout(null);
        this.setSize(900,590);
        this.setResizable(false);
        this.setVisible(true);
        
        //ADDED AWT
        bluePanel.add(txtQty);
        bluePanel.add(txtTotal);
        bluePanel.add(txtPrice);
        bluePanel.add(comboItem);
        bluePanel.add(comboGroup);
        bluePanel.add(labelProduct);
        bluePanel.add(labelItem);
        bluePanel.add(labelPrice);
        bluePanel.add(labelQty);
        bluePanel.add(labelTotal);
        greenPanel.add(buttonBasket);
        greenPanel.add(buttonPay);
        greenPanel.add(buttonCancel);
        greenPanel.add(buttonDiscount);
        greenPanel.add(buttonHelp);
        greenPanel.add(buttonDelete);
        this.add(bluePanel);        
        this.add(redPanel);
        this.add(greenPanel);
        this.add(yellowPanel);

    }    
    
    @Override
    public void actionPerformed(ActionEvent e ){        
        String item = (String)comboGroup.getSelectedItem();
        Object o = subItems.get(item);
        
        if(o==null){
            comboItem.setModel(new DefaultComboBoxModel<>());
        }
        else{
            comboItem.setModel(new DefaultComboBoxModel<>((String[])o));
        }
        }
   
    }
    



    

